@import url('https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard-dynamic-subset.css');
* {font-family:'Pretendard',sans-serif}
*:focus {outline:none}

//색상
$coc-sheet-bg:#888888;
$coc-box-bg:#c4beb6;
$coc-input-bg:rgba(255,255,255,0.5);
$coc-input-bg-1:rgba(255,255,255,0.2);
$coc-sheet-title-bg:linear-gradient(black, #262626);
$tz:cubic-bezier(0.075, 0.82, 0.165, 1);
$coc-shadow:rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset, $coc-box-bg 0 2px 0 0;

@mixin subtitle {
  font-size:0.9em;
  color:#262626;
  font-weight:600;
  text-align:center;
}
@mixin input-box($shadow:$coc-shadow) {
  text-align: center;
  border:0;
  background-image:linear-gradient(to top, $coc-input-bg 0%, $coc-input-bg 100%);
  background-size:100% 0%;
  transition: all $tz 0.5s;
  background-repeat: no-repeat;
  background-position: right;
  &:focus, &:active {
    box-shadow:$shadow;
    background-size:100% 100%;
  }

}
@mixin has-input-line($insert) {
  background-image:linear-gradient(to top, $coc-input-bg-1 0%, $coc-input-bg-1 99%);
  border-bottom:1px solid $coc-input-bg;
  background-position: bottom right;
  background-size: calc(100% - $insert) 0%;
  background-repeat: no-repeat;
  transition:all $tz 0.5s;
  &:has(:focus), &:has(:active) {
    box-shadow:0 2px 0 0 $coc-input-bg;
    background-size:calc(100% - $insert) 100%;
  }
  &>input {
    padding:0.1em 0.3em;
  }
}
@mixin input-line {
  background:transparent;
  border-radius:0;
  background-image:linear-gradient(to top, $coc-input-bg-1 0%, $coc-input-bg-1 99%);
  border-bottom:1px solid $coc-input-bg;
  background-position: bottom right;
  background-size: 100% 0%;
  background-repeat: no-repeat;
  transition:all $tz 0.5s;
  &:focus,:active {
    box-shadow:0 2px 0 0 $coc-input-bg;
    background-size:100% 100%;
  }
}

@import '../checkbox';
#wrapper {
  font-size:1.6rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.setting>label {
  font-family: 'NEXON Lv1 Gothic OTF';
}
input, textarea {font-size:1.6rem;border:0;}
textarea, input {
  color:#262626;
  &:active, &:focus {
    box-shadow: none;
  }
}
.sheet {
  text-align: center;
  background:$coc-sheet-bg;
  display:flex;
  flex-wrap:wrap;
  max-width:960px;
  .title {
    font-family: 'NEXON Lv1 Gothic OTF';
    font-size:2rem;
    color:white;
    background:$coc-sheet-title-bg;
    padding: 0.4rem 0;
  }
}
.sheet_box{
  flex-grow:1;
  flex-basis: 45%;
  background: $coc-box-bg;
  font-size: 1.6rem;
  // div:not(.option)>input:not(._name,[type="checkbox"]),textarea {
  input,textarea {
    background: $coc-input-bg;
  }
  textarea {
    width:100%;
    border-radius: 0;
  }
  .option {
    gap:1rem;
    font-size:1.4rem;
    background: #262626;
    color: floralwhite;
    padding: 1rem 10%;
    >span {
      line-height:1.5em;
    }
  }
}
.content {
  padding:0.5rem 1rem 1rem 1rem;
}
.table_title {
  font-weight:bold;
}
.info {
  .content {
    display:flex;
    flex-flow:column;
    gap:0.5rem;
    &>div {
      display:grid;
      box-sizing:content-box;
      grid-template-columns: 3em 1fr;
      align-items: center;
      &::before{
        content:attr(data-title);
        display:inline-block;
        @include subtitle;
      }
      @include has-input-line(3em);
      input {
        background:transparent;
      }
    }
  }
}
.attr .content {
  display:grid;
  grid-template-columns: repeat(3, 7rem);
  grid-template-rows: 1fr 1fr 1fr;
  grid-auto-flow: column;
  justify-content: center;
  gap: 0.2rem 0.6rem;
  >div {
    display: flex;
    position:relative;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    align-content: center;
    flex-wrap: wrap;
    height:6rem;
    >span:first-child{
      @include subtitle;
      margin-bottom:0.2rem;
    }
    >.value {
      @include input-box;
      background-color: $coc-input-bg;
      width:2.4em;
      height:2em;
      font-size:2rem;
      font-weight:bold;
    }
    .halfvalue, .fifthvalue {
      height:2rem;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}
#mov i {
  width: 16px;
}
// ---
.stats .content {
  text-align:left;
  >div {
    display:inline-flex;
    margin-top:0.5rem;
    align-items: center;
    border-bottom:1px solid $coc-input-bg;
    transition: all $tz 0.5s;
    &:has(input:focus,input:active) {
      box-shadow:0 2px 0 0 $coc-input-bg;
    }
    .sub_title {
      display:inline-block;
      width:2.5em;
      flex-shrink:0;
      @include subtitle;
    }
    input:not([type]), span.input {
      width:2em;
      display:inline-block;
      border:0;
      padding: 1px 2px;
      font-size:1.2rem;
    }
    input:not([type]) {
      font-size:1.6rem;
    }
    input:not([class]){
      @include input-box(none);
      background-color: $coc-input-bg-1;
      border-bottom-right-radius:0;
      border-bottom-left-radius:0;
      text-align:center;
    }
  }
  #current_mental_condition {
    @include input-line;
    margin-top:0.5rem;
    width:100%;
    padding-left:2.5em;
    font-size:1.4rem;
  }
  .desc {
    font-size:1.2rem;
  }
  .max {
    background:transparent;
    &::before{
      content:"/";
      display:inline-block;
    }
  }
}
#majorwoundcurrent{width:9em;display:none}
#major-wound-toggle:checked~#majorwoundcurrent {display:inline}
#mp, #luck {
  width:50%;
  display:inline-flex;
}
#luck {
  justify-content: flex-end;
  input {
    flex-basis: 4em;
    
    flex-shrink: 1;
  }
}
.battle {
  .content {
    &>div {
      display:grid;
      box-sizing:content-box;
      grid-template-columns:5em 1fr;
      align-items: center;
      &::before{
        content:attr(data-title);
        display:inline-block;
        @include subtitle;
      }
      @include has-input-line(5em);
      input, &>div {
        background:transparent;
        text-align:left;
        width:5em;
      }
      &>div {
        padding:0.1em 0.3em;
      }
    }
  }
}
//-----
.skills .option{
  display: flex;
  position:relative;
  align-items: center;
  justify-content: center;
  div:not(.skill_point)>span {
    display:block;
    text-align:left;
    position: relative;
  }
}
.skill_point {
  display:flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap:0.4rem;
  input {
    width:6em!important;
    
  }
}
#sp_0_text {
  position:absolute;
  left:50%;
  bottom:calc(100% + 0.4rem);
  transform: translate(-50%,0%);
  padding:0.2rem 1rem;
  background: #333;
  color: #fff;
  border-radius: 4px;
  font-size: 14px;
  line-height: 1.4;
  white-space: nowrap;
  outline: 0;
  opacity:0;
  &::before {
    content:"현재 직업 기능점수: "
  }
}
.skill_point>div>span{
  &:hover, &:focus, &:active {
    #sp_0_text {opacity:1};
  }
}
.skills .content {
  display: grid;
  margin:0 1rem;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(18, 1fr);
  grid-auto-flow: column;
  grid-auto-columns:minmax(5rem, 25rem);
  gap: 1px;
  column-gap:3rem;
  justify-items: stretch;
  justify-content: center;
  >div {
    display: flex;
    position:relative;
    height: 1.6em;
    width:100%;
    flex-direction: column;
    flex-wrap: wrap;
    align-content: flex-start;
    justify-content: center;
  }
  .skill_name{
    width:calc(100% - 7.6em);
    display:inline-block;
    &::after{
      content:'('attr(default)'%)';
      font-size:1rem;
    }
  }
  [id^=otherskill] {
    position:relative;
    .skill_name::after {content:'';}
    .skill_name {
      input {
        padding:0; margin:0;
        background:transparent;
        border:none;
        font-size:1rem;
        width:1.5rem;
      }
      span {font-size:1rem;}
      input._name {
        font-size:1.6rem;
        width:75%;
      }
    }
  }
  input {
    width:2em;
    height:100%;
    text-align:center;
    font-size:1.4rem;
  }
  .value {
    font-weight:bold;
  }
  .sp, .sp-add, .value {border-radius:0}
}

#cthulhu_mythos>input[type="checkbox"] {opacity:0}
#otherskill1>.skill_icon.remove, #weapon1>.skill_icon.remove {display:none;}
input.sp, input.sp-add {
  background: $coc-input-bg-1!important;
  transition: background-color 0.2s ease;
  &:hover,&:focus,&:active, &:not(:placeholder-shown) {
    background:$coc-input-bg!important;
  }
}
.skills .content>div[id] {
  &:has(input[class^=sp]:not(:placeholder-shown)) {
    background: $coc-box-bg;
    box-shadow: $coc-shadow;
  }
}
.skill_icon {
  cursor: pointer;
  position:absolute;
  &.grip {
    right:100%;
  }
}
.skills .skill_icon.remove {
  left: calc(100% + 0.1rem);
}
.weapons .skill_icon.remove {
  right:-2rem;
}

.halfvalue, .fifthvalue {
  font-size:0.5em;
  padding-left:2px;
  text-align:center;
  width:2em;
}
.weapons {
  .content{
    width:calc(100% - 1.5rem);
    >div{
      display: grid;
      position:relative;
      grid-template-columns: 4fr 3fr 6rem repeat(5, 4.8rem);
      font-size: 1.6rem;
      margin-top:0.4rem;
      align-items: center;
    }
    .table_title>div:nth-child(5),.table_title>div:nth-child(6),.table_title>div:nth-child(7),.table_title>div:nth-child(8) {
      font-size: 0.8em;
    }
  }
}
.table_item>input {
  width:100%;
}
//- 체크박스
.skills input[type=checkbox] {
  $siz:1.6rem;
  height:$siz;
  width:$siz;
  border:0;
  appearance: none;
  position:relative;
  background:transparent;
  @function svgIcon($color) {
    $icon: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23#{$color}' viewBox='0 0 16 16'%3E%3Cpath d='M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z'/%3E%3C/svg%3E";
    @return url($icon);
  }
  &::before {
    content:"";
    display:inline-block;
    width:$siz;
    height:$siz;
    background:rgba(255,255,255,0.1);
    border:none;
    border-radius: 0.4rem;
    transition: all 0.3s ease-in-out;
  }
  &::after {
    opacity:0;
    content: svgIcon(ffffff);
    position:absolute;
    top:0;left:0;
    width:$siz;
    height:$siz;
    transform:scale(1.2);
    transition: all 0.3s ease-in-out;
  }
  &:checked {
    background:$coc-input-bg-1;
    &::before {
      box-shadow: 0 0 1px 1px $coc-input-bg-1;
      background:transparent;
     }
    &::after {
      opacity:1;
      
    }
  }
}

.backstory .content {
  display:grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.4rem;
  textarea {
    height:5em;
  }
}

// 전체 박스 FLEX-BASIS
.skills, .weapons {
  flex-basis:100%;
}
.battle {
  flex-basis:16rem;
}
.backstory, .money {
  flex-basis: 50%;
}

// 미디어쿼리
// 2단
@media (min-width: 561px) and (max-width: 870px) {
  .skills .content {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: repeat(26, 1fr);
    @for $i from 1 to 19 {
      &>div:nth-child(#{$i}) {
        grid-row-start:$i;
        grid-column: 1 / 1;
      }
      &>div:nth-child(#{$i + 18}) {
        grid-row-start:$i;
        grid-column: 2 / 2;
      }
      &>div:nth-child(#{$i + 36}) {
        grid-row-start:$i + 18;
        grid-column: 1 / 1;
      }
      &>div:nth-child(#{$i + 18 + 36}) {
        grid-row-start:$i + 18;
        grid-column: 2 / 2;
      }
    }
    @for $i from 19 to 32 {
      &>div:nth-child(#{$i*2 - 1}) {
        grid-row-start:$i;
        grid-column: 1 / 1;
      }
      &>div:nth-child(#{$i*2 }) {
        grid-row-start:$i;
        grid-column: 2/ 2;
      }
    }
    &>button:last-child {
      grid-column: 1 / 3;
      width:100%;
      margin-top:0.5rem;
    }
  }
}
@media (max-width: 560px) {
  .sheet {
    flex-direction: column;
  }
  .skills .content {
    display:flex;
    flex-direction: column;
    // padding-right:2rem;
  }
  .backstory, .money {
    flex-basis:100%;
  }
  
  .weapons>.content>div {
    grid-template-columns: repeat(10, 1fr);
    gap:1px;
    &.table_title{
      background-color:$coc-input-bg-1;
      align-items: center;
      justify-content: center;
      >div {
        display:flex;
        background-color:$coc-box-bg;
        height:100%;
      }
    }
    &>* {
      grid-column:span 2;
    }
    :first-child {
      grid-column:1 / span 5;
    }
    :nth-child(2) {
      grid-column:6 / span 3;
    }
    :nth-child(3) {
      grid-column:9 / span 2;
    }
  }
}


// 세팅
#saveslots {
  display:flex;
}
.saveslot {
  flex:1;
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  padding:1rem;
  border:1px solid #333;
  border-radius: 0.4rem;
  margin:0.4rem;
  cursor:pointer;
  transition: all 0.3s ease-in-out;
  &:hover {
    background: #333;
    color:white;
  }
  &:focus, &:has(input:checked) {
    background: #333;
    color:white;
  }
  >input {display:none}
}




.hide {
  display:none;
}